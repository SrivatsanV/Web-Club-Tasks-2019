{
  "FilePath": "d:\\Projects\\Webclub-tasks\\Blazor_App\\Blazor_App.csproj",
  "Configuration": {
    "ConfigurationName": "Default",
    "LanguageVersion": "3.0",
    "Extensions": []
  },
  "ProjectWorkspaceState": {
    "TagHelpers": [
      {
        "Kind": "Components.Component",
        "Name": "Blazor_App.App",
        "AssemblyName": "Blazor_App",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "App",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_App.App"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Blazor_App.App",
        "AssemblyName": "Blazor_App",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Blazor_App.App",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_App.App",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Blazor_App.Pages.Counter",
        "AssemblyName": "Blazor_App",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Counter",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_App.Pages.Counter"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Blazor_App.Pages.Counter",
        "AssemblyName": "Blazor_App",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Blazor_App.Pages.Counter",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_App.Pages.Counter",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Blazor_App.Pages.FetchData",
        "AssemblyName": "Blazor_App",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "FetchData",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_App.Pages.FetchData"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Blazor_App.Pages.FetchData",
        "AssemblyName": "Blazor_App",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Blazor_App.Pages.FetchData",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_App.Pages.FetchData",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Blazor_App.Pages.Index",
        "AssemblyName": "Blazor_App",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Index",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_App.Pages.Index"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Blazor_App.Pages.Index",
        "AssemblyName": "Blazor_App",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Blazor_App.Pages.Index",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_App.Pages.Index",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Blazor_App.Shared.MainLayout",
        "AssemblyName": "Blazor_App",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "MainLayout",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_App.Shared.MainLayout"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Blazor_App.Shared.MainLayout",
        "AssemblyName": "Blazor_App",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Blazor_App.Shared.MainLayout",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_App.Shared.MainLayout",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Blazor_App.Shared.MainLayout.Body",
        "AssemblyName": "Blazor_App",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "MainLayout",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Blazor_App.Shared.MainLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Blazor_App.Shared.MainLayout.Body",
        "AssemblyName": "Blazor_App",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "Blazor_App.Shared.MainLayout",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Blazor_App.Shared.MainLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Blazor_App.Shared.NavMenu",
        "AssemblyName": "Blazor_App",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NavMenu",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_App.Shared.NavMenu"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Blazor_App.Shared.NavMenu",
        "AssemblyName": "Blazor_App",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Blazor_App.Shared.NavMenu",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_App.Shared.NavMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Blazor_App.Shared.SurveyPrompt",
        "AssemblyName": "Blazor_App",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "SurveyPrompt",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": null,
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Title"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_App.Shared.SurveyPrompt"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Blazor_App.Shared.SurveyPrompt",
        "AssemblyName": "Blazor_App",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Blazor_App.Shared.SurveyPrompt",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": null,
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Title"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_App.Shared.SurveyPrompt",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizeView",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Policy",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Policy"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Roles",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Roles"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Authorized",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Resource"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.AuthorizeView",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Policy",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Policy"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Roles",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Roles"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Authorized",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Resource"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AuthorizeView",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.AuthorizeView",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "AuthorizeView",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView.NotAuthorized",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "Microsoft.AspNetCore.Components.AuthorizeView",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView.NotAuthorized",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView.Authorized",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Authorized",
            "ParentTag": "AuthorizeView",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'Authorized' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView.Authorized",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView.Authorized",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Authorized",
            "ParentTag": "Microsoft.AspNetCore.Components.AuthorizeView",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'Authorized' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView.Authorized",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "AuthorizeView",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView.Authorizing",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "Microsoft.AspNetCore.Components.AuthorizeView",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView.Authorizing",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "CascadingValue",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.CascadingValue<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The value to be provided.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Name"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "IsFixed"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.CascadingValue",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.CascadingValue<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The value to be provided.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Name"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "IsFixed"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<T>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CascadingValue",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<T>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<T>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.CascadingValue",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<T>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.PageDisplay",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts, plus applying any authorization rules.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "PageDisplay",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the page component to display.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Page"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "PageParameters",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the parameters to pass to the page.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "PageParameters"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorizedContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "NotAuthorizedContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AuthorizingContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AuthorizingContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.PageDisplay"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.PageDisplay",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts, plus applying any authorization rules.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.PageDisplay",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the page component to display.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Page"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "PageParameters",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the parameters to pass to the page.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "PageParameters"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorizedContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "NotAuthorizedContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AuthorizingContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AuthorizingContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.PageDisplay",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.PageDisplay.NotAuthorizedContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorizedContent",
            "ParentTag": "PageDisplay",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'NotAuthorizedContent' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.PageDisplay.NotAuthorizedContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.PageDisplay.NotAuthorizedContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorizedContent",
            "ParentTag": "Microsoft.AspNetCore.Components.PageDisplay",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'NotAuthorizedContent' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.PageDisplay.NotAuthorizedContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.PageDisplay.AuthorizingContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizingContent",
            "ParentTag": "PageDisplay",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.PageDisplay.AuthorizingContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.PageDisplay.AuthorizingContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizingContent",
            "ParentTag": "Microsoft.AspNetCore.Components.PageDisplay",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.PageDisplay.AuthorizingContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingAuthenticationState",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "CascadingAuthenticationState",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingAuthenticationState"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingAuthenticationState",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.CascadingAuthenticationState",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingAuthenticationState",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingAuthenticationState.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CascadingAuthenticationState",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingAuthenticationState.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingAuthenticationState.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.CascadingAuthenticationState",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingAuthenticationState.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "DataAnnotationsValidator",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that displays whichever other component corresponds to the\n            current navigation location.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Router",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the assembly that should be searched, along with its referenced\n            assemblies, for components matching the URI.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AppAssembly"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFoundContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the component that should be used as a fallback when no match is found for the requested route.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "NotFoundContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorizedContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "NotAuthorizedContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AuthorizingContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AuthorizingContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that displays whichever other component corresponds to the\n            current navigation location.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.Router",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the assembly that should be searched, along with its referenced\n            assemblies, for components matching the URI.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AppAssembly"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFoundContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the component that should be used as a fallback when no match is found for the requested route.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "NotFoundContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorizedContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "NotAuthorizedContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AuthorizingContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AuthorizingContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFoundContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the type of the component that should be used as a fallback when no match is found for the requested route.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NotFoundContent",
            "ParentTag": "Router",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFoundContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFoundContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the type of the component that should be used as a fallback when no match is found for the requested route.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NotFoundContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFoundContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotAuthorizedContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorizedContent",
            "ParentTag": "Router",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'NotAuthorizedContent' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotAuthorizedContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotAuthorizedContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorizedContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'NotAuthorizedContent' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotAuthorizedContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.AuthorizingContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizingContent",
            "ParentTag": "Router",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.AuthorizingContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.AuthorizingContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizingContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.AuthorizingContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "EditForm",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "EditContext"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Model"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.EditForm",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "EditContext"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Model"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "EditForm",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.EditForm",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "InputCheckbox",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "InputDate",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.Forms.InputDate<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.Forms.InputDate<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "InputNumber",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.Forms.InputNumber<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.Forms.InputNumber<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "InputSelect",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.Forms.InputSelect<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.Forms.InputSelect<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<T>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "InputSelect",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<T>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<T>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputSelect",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<T>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "InputText",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "InputTextArea",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ValidationMessage",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "For",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "For",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ValidationSummary",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NavLink",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ActiveClass"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Match"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.NavLink",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ActiveClass"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Match"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "NavLink",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.NavLink",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Splat",
        "Name": "Attributes",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Merges a collection of attributes into the current element or component.",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "@attributes",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Splat",
            "Name": "@attributes",
            "TypeName": "System.Object",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Merges a collection of attributes into the current element or component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Attributes",
              "Common.DirectiveAttribute": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Splat",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Attributes"
        }
      },
      {
        "Kind": "Components.Key",
        "Name": "Key",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "@key",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Key",
            "Name": "@key",
            "TypeName": "System.Object",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Key",
              "Common.DirectiveAttribute": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Key",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Key"
        }
      }
    ],
    "CSharpLanguageVersion": 703
  },
  "RootNamespace": "Blazor_App",
  "Documents": [
    {
      "FilePath": "Pages\\Index.razor",
      "TargetPath": "Pages\\Index.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "App.razor",
      "TargetPath": "App.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "Pages\\_Imports.razor",
      "TargetPath": "Pages\\_Imports.razor",
      "FileKind": "componentImport"
    },
    {
      "FilePath": "Shared\\SurveyPrompt.razor",
      "TargetPath": "Shared\\SurveyPrompt.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "Pages\\FetchData.razor",
      "TargetPath": "Pages\\FetchData.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "Shared\\NavMenu.razor",
      "TargetPath": "Shared\\NavMenu.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "_Imports.razor",
      "TargetPath": "_Imports.razor",
      "FileKind": "componentImport"
    },
    {
      "FilePath": "Shared\\MainLayout.razor",
      "TargetPath": "Shared\\MainLayout.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "Pages\\Counter.razor",
      "TargetPath": "Pages\\Counter.razor",
      "FileKind": "component"
    }
  ],
  "SerializationFormat": "0.1"
}